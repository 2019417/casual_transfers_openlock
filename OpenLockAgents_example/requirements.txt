# gym==0.10.while not self.determine_trial_finished(attempt_limit):             done = False             state = self.env.reset()             while not done:                 prev_attempt_reward = attempt_reward                 prev_reward = reward                  action_idx = self.act(state, train=True)                 action = self.env.action_map[self.env.action_space[action_idx]]                 next_state, reward, done, opt = self.env.step(action)                  mask = 0 if done else 1                 self.memory.push(state, action_idx, mask, next_state, reward)                  if self.render:                     self.env.render()                 trial_reward += reward                 attempt_reward += reward                 state = next_state             self.finish_attempt()              assert(                     self.env.cur_trial.cur_attempt.cur_action is None                     and len(self.env.cur_trial.cur_attempt.action_seq) == 0             )             assert attempt_reward == self.env.cur_trial.attempt_seq[-1].reward              self.attempt_rewards.append(attempt_reward)              attempt_reward = 0             self.total_attempt_count += 1              if opt["attempt_success"]:                 attempt_success_count += 1          print(             "Trial end, avg_reward:{}, solutions found:{}/{}".format(                 trial_reward / attempt_limit,                 len(self.env.get_completed_solutions()),                 len(self.env.get_solutions()),             )         )         self.env.cur_trial.trial_reward = trial_reward         self.trial_rewards.append(trial_reward)         self.average_trial_rewards.append(trial_reward / self.env.attempt_count)         self.trial_switch_points.append(len(self.attempt_rewards))         self.trial_percent_solution_found.append(             len(self.env.get_completed_solutions()) / len(self.env.get_solutions())         )         self.trial_percent_attempt_success.append(             attempt_success_count / self.env.attempt_count         )5
gym
tensorflow
tensorboardX
numpy
scipy
matplotlib
keras
zmq
jsonpickle
torch
torchvision
texttable
jsonpickle
h5py
pyglet
pygraphviz
pymdptoolbox
joblib
pathos
seaborn
networkx
more_itertools
pydot
python-constraint
cython
graphviz
tabulate
joblib
networkx
dill
pandas
torch
pyro-ppl
progressbar
openpyxl
mbrl
statsmodels
